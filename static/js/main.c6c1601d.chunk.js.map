{"version":3,"sources":["logo.svg","components/CommentBox.js","components/LikesButton.js","components/CommentList.js","App.js","serviceWorker.js","Welcome.js","index.js"],"names":["module","exports","__webpack_require__","p","CommentBox","React","Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","event","onAddComment","textInput","value","preventDefault","_this2","react_default","a","createElement","className","onSubmit","type","placeholder","ref","commentsLength","CommentList","comments","map","comment","index","key","onClick","onDeleteDomment","App","state","addComment","delComment","console","log","setState","concat","toConsumableArray","newComments","splice","src","logo","alt","components_CommentList","components_CommentBox","length","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c6c1601d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\nclass CommentBox extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        // this.state = {\r\n        //     value:''\r\n        // }\r\n        // this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    // handleChange(event){\r\n    //     this.setState({\r\n    //         value:event.target.value\r\n    //     })\r\n    // }\r\n    handleSubmit(event){\r\n        // alert(this.state.value)\r\n        // alert(this.textInput.value)\r\n        this.props.onAddComment(this.textInput.value)\r\n        this.textInput.value = ''\r\n        event.preventDefault()\r\n    }\r\n    render() {\r\n        return (\r\n            <form className=\"p-5\" onSubmit={this.handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>留言内容</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\" placeholder=\"请输入内容\"\r\n                        // onChange={this.handleChange}\r\n                        // value={this.state.value}\r\n                        //使用ref改为非受控组件不用写注释的内容\r\n                        ref={(textInput)=>{this.textInput = textInput}}\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">留言</button>\r\n                <p>已有{this.props.commentsLength}条评论</p>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default CommentBox\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nclass LikesButton extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            likes: 0\r\n        }\r\n        // this.increaseLikes = this.increaseLikes.bind(this)\r\n    }\r\n    increaseLikes(){\r\n       // alert(2333)\r\n        console.log(this)\r\n        this.setState({\r\n            likes: ++this.state.likes\r\n        })\r\n\r\n    }\r\n    render(){\r\n\r\n        return(\r\n            <div className=\"likes-button-component\">\r\n                <button  type=\"button\" className=\"btn btn-outline-primary btn-lg\"\r\n                onClick={ ()=>{this.increaseLikes()} }\r\n                >\r\n                    棒棒的{this.state.likes}\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default  LikesButton","import React from 'react'\r\n\r\n// const CommentList = ({ comments }) =>{\r\n//     return (\r\n//         <div className=\"comment-list-component\">\r\n//             <label>评论列表</label>\r\n//             <ul className=\"list-group mb-3\">\r\n//                 {\r\n//                     comments.map((comment,index) =>(\r\n//                         <li key={index} className=\"list-group-item\">{comment}</li>\r\n//                             )\r\n//                             )\r\n//                 }\r\n//             </ul>\r\n//         </div>\r\n//     )\r\n// }\r\nclass CommentList extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"comment-list-component\">\r\n                <label>评论列表</label>\r\n                <ul className=\"list-group mb-3\">\r\n                    {\r\n                        this.props.comments.map((comment,index) =>(\r\n                                <li key={index} className=\"list-group-item\">{comment}\r\n                                    <button className=\"btn btn-primary\"\r\n                                    onClick={()=>{this.props.onDeleteDomment(index)}}\r\n                                    >删除</button>\r\n                                </li>\r\n                            )\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n            )\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default CommentList","import React,{ Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport NameCard from './components/NameCard';\nimport LikesButton from './components/LikesButton';\nimport CommentBox from \"./components/CommentBox\";\nimport CommentList from \"./components/CommentList\";\nconst tags = ['有趣','程序员']\nclass App extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            comments:['this is a reply']\n        }\n        this.addComment = this.addComment.bind(this)\n        this.delComment = this.delComment.bind(this)\n    }\n    addComment(comment){\n        console.log(comment)\n        this.setState({\n            comments:[...this.state.comments,comment]\n        })\n    }\n    delComment(index){\n        const  newComments =[...this.state.comments]\n        newComments.splice(index,1)\n        this.setState({\n            comments:newComments\n        })\n    }\n    render() {\n        const { comments } = this.state\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                </header>\n                <CommentList onDeleteDomment={this.delComment}  comments={comments}/>\n                <CommentBox\n                    commentsLength={comments.length}\n                    onAddComment ={this.addComment}\n                    />\n            </div>\n\n        )\n    }\n\n}\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <h2>开始学习React.js Hello</h2>\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//       {/*<NameCard name=\"viking\" number=\"138123456\" isHuman tags={tags}/>*/}\n//       {/*<LikesButton />*/}\n//       <CommentBox/>\n//     </div>\n//   );\n// }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport './App.css';\r\nclass Welcome extends React.Component{\r\nrender() {\r\n    const totoList = ['Learn React','Learn Redux']\r\n    const isLogin = true\r\n    return (\r\n        <div className=\"this\" htmlFor=\"\">\r\n        <h1> Hello React</h1>\r\n\r\n            { String } 直接输出\r\n\r\n            {12 + 2}计算后可直接输出\r\n\r\n            {[1, 2, 3]}类似Repeat\r\n            支持数组 |\r\n\r\n            <ul>\r\n                {\r\n                    totoList.map(item =>\r\n                    <li>{item}</li>\r\n                    )\r\n                }\r\n\r\n            </ul>\r\n            支持三元表达式\r\n            { isLogin ? <p>你已经登录</p> : <p>请登录</p>}\r\n            两个特殊属性\r\n            class   className\r\n            for    htmlFor\r\n            其他属性与HTML属性一致\r\n\r\n        </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default Welcome","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport  Welcome from './Welcome';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n// ReactDOM.render(<Welcome />, document.getElementById('root'));\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}